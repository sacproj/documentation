[{"id":0,"href":"/documentation/usage/getting-started/","title":"Getting Started","parent":"Usage","content":"This page tells you how to get started with Slides as Code CLI and theme, including installation and basic usage.\n   Command Line  CLI Installation  Installation Requirements Homebrew Tarball Checking Installation   CLI in Container Image   Theme Installation Create new Presentation Code your Presentation Slides     Homebrew as package manager    Since Homebrew decided to merge Linuxbrew into Homebrew (see related blog post), in my opinion, with Windows Subsystem for Linux (WSL), HomeBrew becomes a de facto multi-platform package manager for additional software.\nSo, Homebrew can be used on Linux, macOS, and WSL.\nHowever, there is no “best” way to install Slides as Code and its requirements on your computer. You should use the method that works best for your use case.\n Command Line    CLI Installation    Installation Requirements    The sac command line is a Bash 4.x script targeting Linux, macOS, and WSL. It requires bash, coreutils, git, hugo, jq, tree and yq.\n$ brew install bash coreutils git hugo jq tree yq In order to install these tools with another method, please follow related documentation:\n bash version 4.x and above coreutils version 8.x and above git version 2.x and above hugo version 0.80 and above jq version 1.6 and above tree version 1.8.0 and above yq version 4.x and above  Homebrew    To download and install the latest version of sac command line, Homebrew can be used on Linux, macOS, and WSL.\n$ brew install sacproj/sac/sac Tarball    When installing from the tarball, you have to decide where to install the sac script (e.g /usr/local/bin).\n Download the tarball sac-cli.tar.gz from releases page. Unpack the tarball, copy sac and pdf.js scripts where you decide with following tree.  ├── bin │ └── sac └── libexec └── pdf.js Checking Installation    Execute following command to check requirements.\n$ sac doctor For each tool, sac doctor command checks the presence of it and outputs OK or KO as result. You have to install missing tools in order to get sac command line to work as expected.\nCLI in Container Image    An alternative way of using sac command-line is to use the container image available at sacproj/sac. It could be used with following function.\nfunction sac() { \\  docker run --rm \\  -e SAC_DECK_CODE_HUGO_ARGS=\u0026#34;--bind 0.0.0.0\u0026#34; \\  -v $(pwd):/home/linuxbrew/sac \\  -v $HOME/.sac/themes:/usr/local/share/sac/themes \\  -p 1313:1313 \\  -w /home/linuxbrew/sac \\  -it sacproj/sac:2.0.6 sac \u0026#34;$@\u0026#34;; } Theme Installation    In order to install latest Slides as Code Theme, execute following command:\n$ sac theme install github sacproj/sac-theme Then, check installed themes by executing following command:\n$ sac theme installed /usr/local/share/sac/themes └── sac └── x.y.z Create new Presentation    Create a new slides Deck with Slides as Code theme in my-awesome-slides directory:\n$ sac deck new my-awesome-slides sac/x.y.z Go to created repository\n$ cd my-awesome-slides Slides content can be split into multiple Markdown files.\nSo, create few new content files to organize your slides deck:\n$ sac content new cover.md my-awesome-slides/content/home/cover.md created $ sac content new intro.md my-awesome-slides/content/home/intro.md created $ sac content new info.md my-awesome-slides/content/home/info.md created $ sac content new qa.md my-awesome-slides/content/home/qa.md created Thereby, the directory layout of your slides deck is following:\nmy-awesome-slides/ ├── .gitignore ├── .vscode │ └── sac.code-snippets ├── config.yaml ├── content │ └── home │ ├── cover.md │ ├── info.md │ ├── intro.md │ └── qa.md └── static ├── charts ├── codes ├── diagrams ├── images ├── sessions ├── sounds └── videos  content/home directory contains the just created Markdown files. Directories inside static will contain elements such as images, source code used by the slides deck. config.yaml contains the slides deck configuration (see Configuration page). sac.code.snippets contains VS Code snippets used by selected themes (see Snippets page).  Code your Presentation Slides    In order to code (with live update) or present your slides deck, execute following command:\n$ sac deck code See Content Source to code your presentation slides.  "},{"id":1,"href":"/documentation/usage/","title":"Usage","parent":"Code your Presentation Slides","content":"    Getting Started     Content Source     Markdown     Customization     "},{"id":2,"href":"/documentation/usage/content/","title":"Content Source","parent":"Usage","content":"    Content file Content Format Content Source and Rendering Slides delimiters Speaker Notes     Content file    A content file is composed by 2 main components:\n Front matter using YAML format delimited by ---. Content using Markdown, Shortcodes and CSS classes to describe the content.  Content Format    Hugo ❤️ Markdown (see Markdown page), but there are times when Markdown falls short.\nInstead of writing raw HTML, Hugo created Shortcodes.\nA Shortcode is a simple snippet inside a content file that will be rendered using a predefined template (see Shortcodes page).\n{{\u0026lt; shortcode parameters \u0026gt;}} content {{\u0026lt; shortcode \u0026gt;}} VS Code snippets are available in order to ease the use of shortcodes (see Snippets page).  Content Source and Rendering    Each content file should contain markup: html. The command sac content new is taking care of this for you.\n--- weight: 10 markup: \u0026#34;html\u0026#34; --- Markdown with Shortcodes content weight in content file\u0026rsquo;s front-matter is used to sort content files when concatenating them. The command sac content new is incrementing its value by 10 at every execution.\nSlides delimiters    Reveal.js supports slides organization in 2D. During deck presentation, type O key to show slides organization. Regarding navigation, Slides as Code disables 2D navigation and prefers to use linear navigation through all slides (both horizontal and vertical).\nMultiple slides could be put into a same content file.\n--- or ------ are the delimiters to separate each slide within the same content file.\n 3 dashes (---) to create a new slide on the right side (horizontal slides). 6 dashes (------) to create a new slide on the below side (vertical slides).  When building slides deck, content files are concatenated with horizontal separation.\nExamples\nFollowing example creates horizontal slides\n--- weight: \u0026lt;level\u0026gt; markup: \u0026#34;html\u0026#34; --- Slide 1 content --- Slide 2 content --- Slide 3 content Following example creates vertical slides\n--- weight: \u0026lt;level\u0026gt; markup: \u0026#34;html\u0026#34; --- Slide 1 content ------ Slide 1.1 content ------ Slide 1.2 content Speaker Notes    Reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven\u0026rsquo;t written any notes. Press the S key on your keyboard to open the notes window.\nA speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it.\nNotes are defined by appending \u0026ldquo;Note:\u0026rdquo; segment to a slide content followed by Markdown text.\nExample Following example creates slides with notes\n--- weight: \u0026lt;level\u0026gt; markup: \u0026#34;html\u0026#34; --- Slide 1 content Note: Slide 1 Notes ------ Slide 1.1 content Note: Slide 1.1 Notes ------ Slide 1.2 content Note: Slide 1.2 Notes "},{"id":3,"href":"/documentation/usage/markdown/","title":"Markdown","parent":"Usage","content":"    Introduction Element Attributes Slide Attributes Tips \u0026amp; Tricks     Introduction    Slides as Code is a Hugo theme that uses Markdown and Shortcodes to implement slides content. Slides as Code doesn\u0026rsquo;t use Hugo\u0026rsquo;s Markdown renderer, but Reveal.js Markdown renderer called marked.\nThereby, Slides As Code is supporting GitHub Flavored Markdown, see Guide and Reference for further information.\nOn top of marked, Reveal.js implements:\n a special syntax using HTML comments to add attributes to Markdown element and slide. speaker notes delimiter Note:  Element Attributes    Add attributes to the Markdown element by placing the HTML comment next to the element.\nExample\n- Item 2 \u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;2\u0026#34; --\u0026gt; - Item 1 \u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; Slide Attributes    Add attributes to the slide element by placing the HTML comment on top of the slide content. Most of slides attributes could be set by using slide shortcode (see Shortcode page).\nExample\n\u0026lt;!-- .slide: data-background=\u0026#34;#ff0000\u0026#34; --\u0026gt; Slide content Tips \u0026amp; Tricks     Test the supported Markdown notations with Marked demo page. Generate Markdown tables\nhttps://www.tablesgenerator.com/markdown_tables  "},{"id":4,"href":"/documentation/usage/custom/","title":"Customization","parent":"Usage","content":"    Base Theme Theme  Hugo Template and Configuration Contents VS Code Snippets   ACME Theme Example  Hugo Template, Configuration Contents VS Code Snippets Usage       Base Theme    sac-theme is a Base Theme of Slides as Code.\nTheme    Hugo Template and Configuration, VS Code Snippets and Contents are the composable parts of the Base Theme.\nA Theme is a Git repository or tarball that could contains one or more composable parts. Composable part adds or overrides features from previous theme(s) in the configured list (when slides deck has been created by sac deck new command).\nA Theme within Git repository could be named sac-theme-\u0026lt;name\u0026gt; or simply \u0026lt;name\u0026gt;.\ngit describe --tags command is used to get its version (e.g. x.y.z).\nA Theme within tarball should contain a VERSION file that contains one line with its name (name) and version (x.y.z):\nname/x.y.z When installing it with sac theme install command, the Theme will be installed into /usr/local/share/sac/themes/name/x.y.z directory.\n Hugo Template and Configuration    Hugo Template and Configuration composition is managed by Hugo command-line.\nThereby, assets (containing CSS and Javascript), layout (containing HTML and Shortcodes) and static (containing logos, images), config.yaml elements can be added or override by the Theme .\nA Theme should contains theme.toml file as required by Hugo.\nSee Hugo documentation page for further information.\nContents    sac deck new command copies contents (from each content directory, if exists) from given themes into content directory of your slides deck directory.\nThis composable part can be used to get predefined content for different usages such as sales pitch deck, reference architecture design\u0026hellip;  VS Code Snippets    sac deck code command merges VS Code snippets from previously configured themes into .vscode/sac.code-snippets file of your slides deck directory.\nACME Theme Example    An example of Theme is available on sac-theme-acme project.\nHugo Template, Configuration    ACME theme contains some overrides for Hugo:\n HTML in layouts/partials/sac/body.html to create a branding layer for the slides. Shortcodes in layouts/shortcodes to manage title and subtitle layers. SCSS in assets/sac/scss/custom.scss file. Javascript in sac-theme-acme/assets/sac/js/custom.js to manage brand layer. Logo and image in static/acme directory.  Contents    ACME theme contains a cover slide for every slides deck created with it, stored in content/_index.md file.\nVS Code Snippets    ACME theme contains VS Code snippets in .vscode/sac.code-snippets file. It contains:\n palette colors override for *Color snippets layer* snippets to implement layer and layer-logo shortcodes  Usage     Install Slides as Code CLI  $ brew install sacproj/sac/sac  Install Slides as Code Theme  $ sac theme install github sacproj/sac-theme  Install Slides as Code ACME Theme  $ sac theme install git https://github.com/sacproj/sac-theme-acme.git 1.0.0  Check installed themes  $ sac theme installed /usr/local/share/sac/themes ├── acme │ └── 1.0.0 └── sac └── 2.0.0  Create a new slides deck in example directory  $ sac deck new example sac/2.0.0 acme/1.0.0  Create some slides content files  $ cd example $ sac content new content.md $ sac content new end.md  Open content/home/content.md file and write following content:  --- weight: 10 markup: \u0026#34;html\u0026#34; --- {{\u0026lt; layer type=\u0026#34;title\u0026#34; title=\u0026#34;Palette\u0026#34; subtitle=\u0026#34;Colors\u0026#34; \u0026gt;}} ------ {{\u0026lt; layer title=\u0026#34;Colors\u0026#34; \u0026gt;}} {{\u0026lt; div \u0026#34;text-highlight-orange\u0026#34; \u0026gt;}}orange{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;text-highlight-blue\u0026#34; \u0026gt;}}blue{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;text-highlight-gray\u0026#34; \u0026gt;}}gray{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;text-highlight-yellow\u0026#34; \u0026gt;}}yellow{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;text-highlight-brown\u0026#34; \u0026gt;}}brown{{\u0026lt; /div \u0026gt;}}  Open content/home/end.md file and write following content:  --- weight: 20 markup: \u0026#34;html\u0026#34; --- {{\u0026lt; menu-title \u0026#34;End\u0026#34; \u0026gt;}} {{\u0026lt; layer-logo \u0026gt;}}  Show slides deck and open your browser to show customized theme in action.  $ sac deck code "},{"id":5,"href":"/documentation/reference/","title":"Reference","parent":"Code your Presentation Slides","content":"    CLI     Shortcodes     Classes     Snippets     Configuration     "},{"id":6,"href":"/documentation/misc/asciinema/","title":"Asciinema","parent":"Misc","content":"asciinema command-line records terminal sessions.\nYou DON\u0026rsquo;T need to create account on asciinema.org to use this tool.  In order to install asciinema command-line, use following command:\n$ brew install asciinema In order to record terminal sessions into session.json file, launch following command:\n$ asciinema rec session.json For further information, see asciinema\u0026rsquo;s usage page.\n"},{"id":7,"href":"/documentation/reference/cli/","title":"CLI","parent":"Reference","content":"    Usage Theme Management Deck Management Content Management     sac command-line is used to:\n install, update, delete Slides as Code themes on your computer develop slides deck share slides  Usage    Usage: sac \u0026lt;command\u0026gt; Available commands: doctor Show information about the installed tooling theme Theme management deck Deck management content Content management Theme Management    theme sub-commands install Install theme github \u0026lt;owner\u0026gt;/\u0026lt;theme\u0026gt; Install theme from Github latest release git \u0026lt;git\u0026gt; [\u0026lt;tag\u0026gt;] Install theme from Git URL (with optional \u0026lt;tag\u0026gt;) tarball \u0026lt;tarball\u0026gt; Install theme from tarball installed List installed themes and versions remove \u0026lt;theme\u0026gt; \u0026lt;version\u0026gt; Remove installed \u0026lt;theme\u0026gt;/\u0026lt;version\u0026gt; Deck Management    deck sub-commands new \u0026lt;deck-directory\u0026gt; \u0026lt;theme\u0026gt;... Create a new slides deck with themes code Serve slides deck with live updates html Build slides deck in HTML into public directory pdf [\u0026lt;pdf\u0026gt;] [\u0026lt;timeout\u0026gt;] Build slides deck in PDF (default \u0026lt;pdf\u0026gt;=slides.pdf \u0026lt;timeout\u0026gt;=10000) Content Management    content sub-commands new \u0026lt;content-name.md\u0026gt; Create a new content file "},{"id":8,"href":"/documentation/misc/drawio/","title":"Draw.io","parent":"Misc","content":"Diagrams.net (previously known as Draw.io) is a professional, open source diagramming with online or desktop application without registration.\nFAQ    How to import Lucidchart diagrams into draw.io?    https://desk.draw.io/support/solutions/articles/16000063693-how-to-import-lucidchart-diagrams-into-draw-io\nHow to add a template to an additional page in the existing diagram?    https://desk.draw.io/support/solutions/articles/16000088435-how-to-add-a-template-to-an-additional-page-in-the-existing-diagram-\nHow to use Layers?    https://desk.draw.io/support/solutions/articles/16000067815-how-to-use-layers-\nInteractive diagrams with custom links and actions    https://about.draw.io/interactive-diagrams-with-custom-links-and-actions/\n"},{"id":9,"href":"/documentation/misc/fontawesome/","title":"FontAwesome","parent":"Misc","content":"FontAwesome modifiers    FontAwesome icons could be modified as following (see related link for further documentation):\n Sized or fixed-width by using CSS class (e.g. fa-2x, fa-fw) Used to replace list bullets Rotated Animated Stacked  "},{"id":10,"href":"/documentation/reference/shortcodes/","title":"Shortcodes","parent":"Reference","content":"Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short.\nOften, content authors are forced to add raw HTML to Markdown content. Hugo authors think this contradicts the beautiful simplicity of Markdown’s syntax. Hugo created shortcodes to circumvent these limitations.\nA shortcode is a simple snippet inside a content file that will be rendered using a predefined template.\n   Slide Shortcodes  slide  menu-title iframe bg bg-color bg-image bg-video bg-video-loop bg-video-muted bg-iframe bg-size bg-position bg-repeat bg-opacity   menu-title  title     Component Shortcodes  asciinema  src autoplay speed idle-time-limit start-at title poster size   box  class title   chart  type src   code  lang src line-numbers focus   drawio  src page layers   quote  attribution   typed  type-speed start-delay back-speed smart-backspace shuffle back-delay loop loop-count show-cursor cursor-char   year   Icons Shortcodes  emoji fab far fas   Styles Shortcodes  color size   Format Shortcodes  div span ol ul li   Media Shortcodes  audio image  src alt width height class style caption caption-class   video  src autoplay width height controls class style   iframe       Slide Shortcodes    slide    Slide shortcode is used to set the title and the slide background.\nFormat\n{{\u0026lt; slide named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nmenu-title    Defines the title used in menu (default to first heading in the slide). Menu appears when clicking \u0026lsquo;M\u0026rsquo; button when presenting slides.\niframe    Defines overlay iframe URL.\nbg    Defines background with CSS function (e.g. bg=\u0026ldquo;linear-gradient(#571d96, #398ccb)\u0026quot;)\nbg-color    Defines background colour with one of palette color (see Configuration page) or CSS value.\nbg-image    Defines background image URL. Animated GIFs restart when the slide opens.\nbg-video    A single video URL, or a comma separated list of video URL.\nbg-video-loop    Flags if the video should play repeatedly (default to \u0026ldquo;false\u0026rdquo;).\nbg-video-muted    Flags if the audio should be muted (default to \u0026ldquo;false\u0026rdquo;).\nbg-iframe    Defines background iframe URL.\nbg-size    Defines background size with CSS value (default to \u0026ldquo;cover\u0026rdquo;).\nbg-position    Defines background position with CSS value (default to \u0026ldquo;center\u0026rdquo;).\nbg-repeat    Defines background repeat with CSS value (default to \u0026ldquo;no-repeat\u0026rdquo;).\nbg-opacity    Opacity of the background video on a 0 to 1 scale. 0 is transparent and 1 is fully opaque (default to \u0026ldquo;1\u0026rdquo;).\nmenu-title    Defines or overrides the title used in menu\nFormat\n{{\u0026lt; menu-title title \u0026gt;}} Positional Parameters All positional parameters are optional.\ntitle    Defines the title used in menu.\nComponent Shortcodes    asciinema    Renders the playback of Asciinema recorded terminal sessions.\nTo record terminal session, see Asciinema page\nFormat\n{{\u0026lt; asciinema named-parameters \u0026gt;}} Named Parameters All named parameters are optional except file that is mandatory.\nsrc    Defines source URL to load content from\nautoplay    Enables player to automatically start the session (default to \u0026ldquo;false\u0026rdquo;)\nspeed    Playback speed (Defaults to 1 (normal speed) 2 means 2x faster.\nidle-time-limit    Limit terminal inactivity to given number of seconds.\nstart-at    Starts playback at given time in second\ntitle    Defines the title above the player\nposter    Defines the timing in second from where the player previews the frame\nsize    Defines the size of the terminal font (default to \u0026ldquo;small\u0026rdquo;) Possible values are following\n small medium big any CSS value (e.g. 15px, 1.2em\u0026hellip;)  box    Render boxed text with three distinct box rendering styles: the default, rounded, and waved.\nFormat without title\n{{\u0026lt; box class \u0026gt;}} content {{\u0026lt; /box */}} Format with title\n{{\u0026lt;/* box class title \u0026gt;}} content {{\u0026lt; /box \u0026gt;}} Positional Parameters All positional parameters are optional.\nclass    Defines CSS class to use (if not set default rendering style is used).\nPossible values are following:\n rounded used for rounded rendering style waved used for waved rendering style  title    Defines box title.\nchart    Renders a chart with given data. Chart.js library is used to render charts.\nFormat for inline data\n{{\u0026lt; chart named-parameters \u0026gt;}} \u0026lt;!-- JSON-data --\u0026gt; {{\u0026lt; /chart \u0026gt;}} Format for external data\n{{\u0026lt; chart named-parameters /\u0026gt;}} Named Parameters All named parameters are optional except type.\ntype    Defines chart type. Possible values are following:\n line bar horizontalBar pie doughnut radar polarArea scatter  src    Defines source URL to load JSON data from See Chart.js documentation and samples.\ncode    Renders code-block with optional syntax highlighting. If focus is set, code block is automatically scrolled such that the lines of code to be focused on is centered.\nFormat for inline source\n{{\u0026lt; code named-parameters \u0026gt;}} source {{\u0026lt; /code \u0026gt;}} Format for external source\n{{\u0026lt; code named-parameters /\u0026gt;}} Named Parameters All named parameters are optional.\nlang    Defines language for syntax highlighting. List of supported languages is available at Highlight.js source code.\nsrc    Defines source URL to load content from.\nline-numbers    Flags if the line numbers are displayed (default to \u0026ldquo;false\u0026rdquo;).\nfocus    Defines focused lines in code block as pipe-separated list of line number and/or lines range. For instance\n \u0026ldquo;3\u0026rdquo; to focus line 3 \u0026ldquo;1,3,5\u0026rdquo; to focus lines 1,3 and 5 \u0026ldquo;1-5\u0026rdquo; to focus lines 1 to 5 \u0026ldquo;1,7-10\u0026rdquo; to focus lines 1 and lines 7 to 10  drawio    Renders draw.io diagram. For more information, read dedicated page: Draw.io page\nFormat\n{{\u0026lt; drawio named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nsrc    Defines source URL to load content from\npage    Displayed page index (default to 0)\nlayers    Space-separated list of visible layers (e.g. layers=\u0026ldquo;0 1\u0026rdquo;)\nquote    Renders a styled quotation with optional attribution.\nFormat without attribution\n{{\u0026lt; quote \u0026gt;}} content {{\u0026lt; /quote \u0026gt;}} Format with attribution\n{{\u0026lt; quote attribution \u0026gt;}} content {{\u0026lt; /quote \u0026gt;}} Positional parameters All positional parameters are optional.\nattribution    Defines quote\u0026rsquo;s attribution\ntyped    Types strings using Typed.js.\nEnter in any string, and watch it type at the speed you\u0026rsquo;ve set, backspace what it\u0026rsquo;s typed, and begin a new sentence for however many strings you\u0026rsquo;ve set.\nFormat\n{{\u0026lt; typed named-parameters \u0026gt;}} sentence 1 sentence 2 sentence 3 ... sentence N {{\u0026lt; /typed \u0026gt;}} Named Parameters All named parameters are optional.\ntype-speed    Defines type speed in millisecond (default to \u0026ldquo;50\u0026rdquo;)\nstart-delay    Defines time before typing in millisecond (default to \u0026ldquo;0\u0026rdquo;)\nback-speed    backspacing speed in millisecond (default to \u0026ldquo;30\u0026rdquo;)\nsmart-backspace    Enables only backspace what doesn\u0026rsquo;t match the previous string (default to \u0026ldquo;true\u0026rdquo;)\nshuffle    Enables shuffle the strings (default to \u0026ldquo;false\u0026rdquo;)\nback-delay    Defines time before backspacing in millisecond (default to \u0026ldquo;1000\u0026rdquo;)\nloop    Enables loop strings (default to \u0026ldquo;true\u0026rdquo;)\nloop-count    Defines amount of loops (default to \u0026ldquo;Infinity\u0026rdquo;)\nshow-cursor    Shows cursor (default to \u0026ldquo;true\u0026rdquo;)\ncursor-char    Defines character for cursor (default to \u0026ldquo;|\u0026quot;)\nyear    Renders current year.\nFormat\n{{\u0026lt; year \u0026gt;}} Icons Shortcodes    emoji    Renders Emoji emoticons by their names.\nFormat\n{{\u0026lt; emoji name \u0026gt;}} See Emoji Cheat Sheet for available emojis.\nfab    Renders FontAwesome brand icons by their names.\nFormat\n{{\u0026lt; fab name \u0026gt;}} See Brand icons gallery for icon names.\nfar    Renders FontAwesome regular icons by their names.\nFormat\n{{\u0026lt; far name \u0026gt;}} See Regular icons gallery for icon names.\nfas    Renders FontAwesome solid icons by their names.\nFormat\n{{\u0026lt; fas name \u0026gt;}} See Solid icons gallery for icon names.\nStyles Shortcodes    color    Modifies colour of a span.\nFormat\n{{\u0026lt; color value \u0026gt;}} size    Modifies font size of a span.\nFormat\n{{\u0026lt; size value \u0026gt;}} Format Shortcodes    div    Applies style to a flow of element by using CSS classes.\nFormat\n{{\u0026lt; div classes \u0026gt;}} content {{\u0026lt; /div \u0026gt;}} {{\u0026lt; div classes fragment-index \u0026gt;}} content {{\u0026lt; /div \u0026gt;}} span    Applies style to a text by using CSS classes.\nFormat\n{{\u0026lt; span classes \u0026gt;}} content {{\u0026lt; /span \u0026gt;}} {{\u0026lt; span classes fragment-index \u0026gt;}} content {{\u0026lt; /span \u0026gt;}} ol    Applies style to an ordered list by using CSS classes.\nFormat\n{{\u0026lt; ol classes \u0026gt;}} content {{\u0026lt; /ol \u0026gt;}} ul    Applies style to an unordered list by using CSS classes.\nFormat\n{{\u0026lt; ul classes \u0026gt;}} content {{\u0026lt; /ul \u0026gt;}} li    Applies style to a list item by using CSS classes.\nFormat\n{{\u0026lt; li classes \u0026gt;}}content{{\u0026lt; /li \u0026gt;}} {{\u0026lt; li classes fragment-index \u0026gt;}}content{{\u0026lt; /li \u0026gt;}} Media Shortcodes    audio    Play sound when slide is showing. Supported format are OGG, MP3, WAV.\nExample\n{{\u0026lt; audio src=\u0026#34;url\u0026#34; \u0026gt;}} image    Image could be inserted with Markdown syntax, but it can\u0026rsquo;t be resized.\nFormat {{\u0026lt; img named-parameters \u0026gt;}}\nNamed Parameters All named parameters are optional.\nsrc    Defines image URL\nalt    Defines alternative and hover text\nwidth    Defines image width\nheight    Defines image height\nclass    Defines CSS class\nstyle    Defines CSS style\ncaption    Defines caption text\ncaption-class    Defines CSS class for caption text\nExample\n{{\u0026lt; img src=\u0026#34;url\u0026#34; height=\u0026#34;600\u0026#34; \u0026gt;}} video    Play video when slide is showing.\nFormat\n{{\u0026lt; video named-parameters \u0026gt;}} Named Parameters All named parameters are optional.\nsrc    Defines video URL\nautoplay    Enables video autoplay when slide is displayed (default to \u0026ldquo;true\u0026rdquo;)\nwidth    Defines video width\nheight    Defines video height\ncontrols    Displays video controls (default to \u0026ldquo;true\u0026rdquo;)\nclass    Defines CSS class\nstyle    Defines CSS style\nExample\n{{\u0026lt; video src=\u0026#34;url\u0026#34; height=\u0026#34;600\u0026#34; \u0026gt;}} iframe    Embed a web page within the slide.\nExample\n\u0026lt;iframe height=\u0026#34;600\u0026#34; src=\u0026#34;url\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; By adding following on top of the slide, embedded web page can be\n refreshed on slide load and periodically refreshed.  In order to refresh only on slide load, set rate_in_ms to 0.\n\u0026lt;!-- .slide: data-iframe-refresh=\u0026#34;iframe_id[:rate_in_ms]\u0026#34; --\u0026gt; data-iframe-refresh parameter consists on the id of the iframe iframe_id and an optional refresh period rate_in_ms. The default refresh rate is equal to 5000 ms.\nExample\n\u0026lt;!-- .slide: data-iframe-refresh=\u0026#34;foo\u0026#34; --\u0026gt; \u0026lt;iframe id=\u0026#34;foo\u0026#34; height=\u0026#34;600\u0026#34; src=\u0026#34;url\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; "},{"id":11,"href":"/documentation/reference/css/","title":"Classes","parent":"Reference","content":"CSS classes could be applied\n to element by setting parameter in shortcode (if exists) to paragraph by using special comment after the paragraph \u0026lt;!-- .element class=\u0026quot;classes\u0026quot; --\u0026gt;  In following classes, \u0026lt;color\u0026gt; variable is equal to one of palette color (see Configuration page).\n   Fragments Styles  bg-\u0026lt;color\u0026gt; img-\u0026lt;style\u0026gt; rounded table-zebra text-\u0026lt;style\u0026gt; text-\u0026lt;color\u0026gt; text-highlight-\u0026lt;color\u0026gt;\\   Layout  columns / column / col-\u0026lt;percent\u0026gt; / col-off-\u0026lt;percent\u0026gt; margin-\u0026lt;direction\u0026gt;-\u0026lt;percent\u0026gt; margin-\u0026lt;direction\u0026gt;-neg-\u0026lt;percent\u0026gt; span-\u0026lt;percent\u0026gt; stretch   Reveal Layout  r-stack r-fit-text r-stretch r-frame       Fragments    Fragments are used to highlight individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide.\nThe default fragment style is to start out invisible and fade in.\nThe default style can be changed by appending a different class to the fragment.\nPossible styles are following\n grow to grow shrink to shrink fade-out to fade-out fade-up to fade from up fade-down to fade from down fade-left to fade from left fade-right to fade from right fade-in-then-out to fades in, then out when we move to the next step fade-in-then-semi-out to fades in, then obfuscate when we move to the next step highlight-red to highlight in red highlight-green to highlight in green highlight-blue to highlight in blue highlight-current-red to highlight in red only when current fragment highlight-current-green to highlight in green only when current fragment highlight-current-blue to highlight in blue only when current fragment fragment-text-\u0026lt;color\u0026gt; to text in \u0026lt;color\u0026gt; fragment-text-highlight-\u0026lt;color\u0026gt; to text highlight in \u0026lt;color\u0026gt;  fragment-bg-\u0026lt;color\u0026gt; to background in \u0026lt;color\u0026gt;  fragment-text-\u0026lt;style\u0026gt; to text in \u0026lt;style\u0026gt; fragment-current-text-\u0026lt;color\u0026gt; to text in \u0026lt;color\u0026gt; only when current fragment fragment-current-text-highlight-\u0026lt;color\u0026gt; to text highlight in \u0026lt;color\u0026gt; only when current fragment fragment-current-bg-\u0026lt;color\u0026gt; to background in \u0026lt;color\u0026gt; only when current fragment fragment-current-text-\u0026lt;style\u0026gt; to text in \u0026lt;style\u0026gt; only when current fragment  Multiple fragments can be applied to the same element sequentially by wrapping it.\nThe display order of fragments can be controlled by\n using fragment index in div / span / li shortcodes using the data-fragment-index attribute in element attribute.\ne.g. \u0026lt;!-- .element class=\u0026quot;fragment\u0026quot; data-fragment-index=\u0026quot;1\u0026quot; --\u0026gt;  Styles    bg-\u0026lt;color\u0026gt;    Set background \u0026lt;color\u0026gt;.\nimg-\u0026lt;style\u0026gt;    Style the image with possible \u0026lt;style\u0026gt; values:\n middle to vertical align with middle  rounded    Use rounded borders with text-highlight-\u0026lt;color\u0026gt; class.\ntable-zebra    Table rows are rendered using alternating stripped backgrounds\nExample\n|x|y|z| |-|-|-| |1|2|3| |4|5|6| |7|8|9| |A|B|C| \u0026lt;!-- .element class=\u0026#34;table-zebra\u0026#34; --\u0026gt; Empty line is mandatory between table and .element attribute.\ntext-\u0026lt;style\u0026gt;    Style the text with possible \u0026lt;style\u0026gt; values:\n Font Family  main to use default font code to use monospace font   Alignment  left to align to the left right to align to the right center to align in the center   Font Style  lighter to use lighter font normal to use normal font bold to use bold font italic to use italic font overstrike to use overstrike font uppercase to uppercase text lowercase to uppercase text capitalize to capitalize text smallcaps to smallcaps text   Font Size  01 to 50 to size the font in em    text-\u0026lt;color\u0026gt;    Apply \u0026lt;color\u0026gt; to text.\ntext-highlight-\u0026lt;color\u0026gt;\\    Highlight text with \u0026lt;color\u0026gt;.\nLayout    columns / column / col-\u0026lt;percent\u0026gt; / col-off-\u0026lt;percent\u0026gt;    Column with equal width\nBuilding a columns layout by following this steps\n Add a columns div Add as many column div as you want  Each column will have an equal width, no matter the number of columns.\nColumn sizes\nIf you want to change the size of a single column, you can use following classes\n col-\u0026lt;percent\u0026gt; with \u0026lt;percent\u0026gt; equals to one of the following values  10, 20, 30, 40, 50, 60, 70, 80, 90, 100 25, 50, 75 33, 66   col-\u0026lt;N\u0026gt;-12 with \u0026lt;N\u0026gt; equals to one value from 1 to 12 (12 columns system)  Column offsets\nWhile you can use empty columns to create horizontal space around column elements, you can also use col-off- modifier with  equals to same values as previous.\nColumns options\n col-vcentered to align your columns vertically, add the col-vcentered modifier to the columns container. col-multiline Add the col-multiline modifier and add more column elements than would fit in a single row. col-centered While you can use empty columns (like {{\u0026lt; div \u0026quot;column\u0026quot; \u0026gt;}}{{\u0026lt; /div \u0026gt;}}) to create horizontal space around column elements, you can also use col-centered on the parent columns element.  Examples\n{{\u0026lt; div \u0026#34;columns\u0026#34; \u0026gt;}} {{\u0026lt; div \u0026#34;column\u0026#34; \u0026gt;}}First column{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;column\u0026#34; \u0026gt;}}Second column{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;column\u0026#34; \u0026gt;}}Third column{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;column\u0026#34; \u0026gt;}}Fourth column{{\u0026lt; /div \u0026gt;}} {{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;columns\u0026#34; \u0026gt;}} {{\u0026lt; div \u0026#34;column col-off-10 col-30\u0026#34; \u0026gt;}}30%{{\u0026lt; /div \u0026gt;}} {{\u0026lt; div \u0026#34;column col-50\u0026#34; \u0026gt;}}50%{{\u0026lt; /div \u0026gt;}} {{\u0026lt; /div \u0026gt;}} margin-\u0026lt;direction\u0026gt;-\u0026lt;percent\u0026gt;    Set the size of margin in \u0026lt;direction\u0026gt; (top, bottom, left, right) with \u0026lt;percent\u0026gt; value from 1 to 100.\nmargin-\u0026lt;direction\u0026gt;-neg-\u0026lt;percent\u0026gt;    Set the size of margin in \u0026lt;direction\u0026gt; (top, bottom, left, right) with \u0026lt;percent\u0026gt; value from -1 to -100.\nspan-\u0026lt;percent\u0026gt;    Set the size of element with \u0026lt;percent\u0026gt; value from one of following values:\n 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100  stretch    Sometimes it\u0026rsquo;s desirable to have a component, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the stretch class to a component. Only first descendant of a slide can be stretched.\nReveal Layout    See layout documentation page from Reveal.js for further information about following classes.\nr-stack    r-fit-text    r-stretch    r-frame    "},{"id":12,"href":"/documentation/misc/iframe/","title":"Interactive iframes","parent":"Misc","content":"Iframe could be used to interact with computing system. Some examples of interactive iframes are given on that page.\n   ttyd  How to use ttyd with Slides as Code   code-server  How to use code-server with Slides as Code       ttyd    ttyd is a simple command-line tool for sharing terminal over the web.\nIn order to install ttyd command-line, use following command:\n$ brew install ttyd How to use ttyd with Slides as Code    Launch ttyd command-line to execute bash shell and expose server to 8080 port, for instance.\n$ ttyd -p 8080 bash On your slides deck, use slide shortcode to connect to ttyd\n{{\u0026lt; slide iframe=\u0026#34;http://localhost:8080\u0026#34; \u0026gt;}} For further information, see ttyd\u0026rsquo;s example usage page.\ncode-server    code-server allows to run VS Code on any machine anywhere and access it in the browser.\nIn order to install code-server server, use following command:\n$ brew install code-server How to use code-server with Slides as Code    Launch code-server server without authentication.\n$ code-server --auth none On your slides deck, use slide shortcode to connect to ttyd\n{{\u0026lt; slide iframe=\u0026#34;http://localhost:8080\u0026#34; \u0026gt;}} For further information, see code-server\u0026rsquo;s project page.\n"},{"id":13,"href":"/documentation/misc/youtube/","title":"Youtube Downloader","parent":"Misc","content":"youtube-dl command could be used to download video file from Youtube and Youtube like website.\nIn order to install youtube-dl command-line, use following commands\n$ brew install youtube-dl In order to be imported into Slides As Code, download MP4 format\n$ youtube-dl -f mp4 \u0026lt;url\u0026gt; For further information, see youtube-dl\u0026rsquo;s documentation page.\n"},{"id":14,"href":"/documentation/reference/snippets/","title":"Snippets","parent":"Reference","content":"    VS Code Auto-complete Codes     VS Code    If you want to use Visual Studio Code, sac comes with auto-completion snippets to ease the slides' authoring.\nYou need also to update your VS Code User settings and append the following code block.\n{ \u0026#34;[markdown]\u0026#34;: { \u0026#34;editor.quickSuggestions\u0026#34;: true } }   Auto-complete Codes    By default VS Code supports Markdown keyboard shortcuts and auto-completion.\nSlides as Code adds following auto-completion (see table below). By typing Prefix, corresponding Item is auto-completed in your content file.\n   Prefix Item     vss\nhss Vertical Slide Separator\nHorizontal Slide Separator   slide Slide   menu Menu Title   asciinema\nbox\nchart\ncode\nquote\ntyped\nyear Related Component   emoji\nfab\nfar\nfas Related Icon   div\nspan\nol\nul\nli Related Format   lif List with fragments   tc\nthc\nbg\nts\ntz Text Color\nText Highlight Color\nBackground Color\nText Style\nText Size   fragment Fragment   fragment-tc\nfragment-thc\nfragment-bg\nfragment-ts\nfragment-tz Text Color Fragment\nText Highlight Color Fragment\nBackground Color Fragment\nText Style Fragment\nText Size Fragment   fragment-current-tc\nfragment-current-thc\nfragment-current-bg\nfragment-current-ts\nfragment-current-tz  Text Color Fragment Current\nText Highlight Color Fragment Current\nBackground Color Fragment Current\nText Style Fragment Current\nText Size Fragment Current   columns\ncolumn\ncol\ncol-off\ncol-12\nspan Columns div\nColumn div\nColumn percent\nColumn offset percent\nColumn size in 12th\nSpan percent   audio\nimg\nvideo Corresponding Media   element Element Markdown extension    "},{"id":15,"href":"/documentation/reference/configuration/","title":"Configuration","parent":"Reference","content":"    Configuration Parameters  Content Parameters Reveal.js Parameters  geometry options   Theme Parameters  theme.palette     Configuration Merge     Slides as Code configuration is managed by using Hugo configuration files in YAML format: i.e. config.yaml.\nEvery parameters for configuring Slides as Code rendering are present in params key in config.yaml.  Configuration Parameters    Content Parameters    Following parameters are used in HTML header in order to configure relative meta tags.\n title author description  Example\nparams:title:\u0026#34;Slides as Code\u0026#34;author:\u0026#34;Stéphane Este-Gracias\u0026#34;description:\u0026#34;Code your Presentation Slides\u0026#34;Reveal.js Parameters    geometry    geometry key contains following parameters.\n width height margin scale  min max    Relative Reveal.js parameters are documented in Reveal.js documentation page.\nExample\nparams:geometry:width:1920height:1080margin:0.0scale:min:0.2max:2.0options    options key contains Reveal.js options in snake case.\nRelative Reveal.js parameters arec documented in Reveal.js documentation page.\nExample\nparams:options:progress:falseslide_number:trueTheme Parameters    theme key contains Slides as Code theme parameters. See self-explanatory example below.\ntheme.palette    palette key contains a key/value pairs that defines CSS colors used by Classes that contains \u0026lt;color\u0026gt;. Each value contains a list of two CSS colors, the first is used on regular background (light or dark) and the second is used on opposite background (dark or light).\nIn following example, black, white, darkgray, lightgray, orange, blue, gray, yellow, brown colors are defined as palette colors.\nExample\nparams:theme:# \u0026#34;light\u0026#34; or \u0026#34;dark\u0026#34; modemode:light:\u0026#34;#fff\u0026#34;font_size:default:\u0026#34;40px\u0026#34;code:\u0026#34;0.55em\u0026#34;chart:12main_font:name:\u0026#34;Open Sans, sans-serif\u0026#34;css:\u0026#34;Open Sans.css\u0026#34;code_font:name:\u0026#34;Hack, monospace\u0026#34;css:\u0026#34;hack.css\u0026#34;heading_font:name:\u0026#34;Raleway, sans-serif\u0026#34;css:\u0026#34;Raleway.css\u0026#34;box_shadow:\u0026#34;0px 5px 1500px rgba(0, 0, 0, 0.15)\u0026#34;colors:background:\u0026#34;#fff\u0026#34;main:\u0026#34;#261036\u0026#34;heading:\u0026#34;#f8782f\u0026#34;link:\u0026#34;#f8782f\u0026#34;link_hover:\u0026#34;lighten( #f8782f, 15% )\u0026#34;selection:\u0026#34;#fff\u0026#34;selection_background:\u0026#34;#f8782f\u0026#34;code:\u0026#34;#fff\u0026#34;code_background:\u0026#34;#261036\u0026#34;chart:palette:- \u0026#34;#2f60b5\u0026#34;- \u0026#34;#f8782f\u0026#34;- \u0026#34;#9399a5\u0026#34;- \u0026#34;#fdfc52\u0026#34;- \u0026#34;#59271e\u0026#34;- \u0026#34;#261036\u0026#34;- \u0026#34;#c6c6c6\u0026#34;- \u0026#34;#878787\u0026#34;fill:- \u0026#34;rgba(80, 135, 160, 0.2)\u0026#34;- \u0026#34;rgba(238, 117, 35, 0.2)\u0026#34;- \u0026#34;rgba(149, 193, 31, 0.2)\u0026#34;- \u0026#34;rgba(87, 29, 150, 0.2)\u0026#34;- \u0026#34;rgba(159, 107, 80, 0.2)\u0026#34;- \u0026#34;rgba(24, 24, 40, 0.2)\u0026#34;- \u0026#34;rgba(198, 198, 198, 0.2)\u0026#34;- \u0026#34;rgba(135, 135, 135, 0.2)\u0026#34;grid:\u0026#34;#c6c6c6\u0026#34;palette:black:- \u0026#34;#261036\u0026#34;- \u0026#34;#fff\u0026#34;white:- \u0026#34;#fff\u0026#34;- \u0026#34;#261036\u0026#34;darkgray:- \u0026#34;#878787\u0026#34;- \u0026#34;#fff\u0026#34;lightgray:- \u0026#34;#c6c6c6\u0026#34;- \u0026#34;#261036\u0026#34;orange:- \u0026#34;#f8782f\u0026#34;- \u0026#34;#fff\u0026#34;blue:- \u0026#34;#2f60b5\u0026#34;- \u0026#34;#fff\u0026#34;gray:- \u0026#34;#9399a5\u0026#34;- \u0026#34;#fff\u0026#34;yellow:- \u0026#34;#fdfc52\u0026#34;- \u0026#34;#261036\u0026#34;brown:- \u0026#34;#59271e\u0026#34;- \u0026#34;#fff\u0026#34;Configuration Merge    Slides as Code configuration is processed by merging configuration files starting from selected themes to config.yaml in your slides deck.\nFor example, if you created your slides deck with sac deck new my-awesome-slides sac/2.0.0 acme/1.0.0 command, Hugo will merge configuration files in following order:\n sac/2.0.0/config.yaml from /usr/local/share/sac/themes directory acme/1.0.0/config.yaml from /usr/local/share/sac/themes directory config.yaml from your my-awesome-slides slides deck directory  "},{"id":16,"href":"/documentation/faq/","title":"FAQ","parent":"Code your Presentation Slides","content":"    What is the presentation size? Some features don\u0026rsquo;t seem to work after updating a theme Can\u0026rsquo;t apply fragment to a list item     What is the presentation size?    A Presentation made with Slides as Code theme has a default size of (width: 1920, height: 1080), that is, the resolution at which they are authored. This size can be customized in config.yaml (see Configuration).\nThe framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.\nSome features don\u0026rsquo;t seem to work after updating a theme    After the update of a theme, you should do a hard reload on your browser (CRTL+SHIFT+R) of your slides deck.\nCan\u0026rsquo;t apply fragment to a list item    If a list item contains Markdown or another shortcode, element with fragment class doesn\u0026rsquo;t work as expected.\nReplace following code (that doesn\u0026rsquo;t work as expected)\n{{\u0026lt; ul \u0026#34;class\u0026#34; \u0026gt;}} - **abc** \u0026lt;!-- .element class=\u0026#34;fragment\u0026#34; --\u0026gt; - **mno** \u0026lt;!-- .element class=\u0026#34;fragment\u0026#34; --\u0026gt; - {{\u0026lt; span \u0026#34;text-highlight-black\u0026#34; \u0026gt;}}xyz{{\u0026lt; /span \u0026gt;}} \u0026lt;!-- .element class=\u0026#34;fragment\u0026#34; --\u0026gt; {{\u0026lt; /ul \u0026gt;}} by this one\n{{\u0026lt; ul \u0026#34;class\u0026#34; \u0026gt;}} {{\u0026lt; li \u0026#34;fragment\u0026#34; \u0026gt;}}**abc**{{\u0026lt; /li \u0026gt;}} {{\u0026lt; li \u0026#34;fragment\u0026#34; \u0026gt;}}**mno**{{\u0026lt; /li \u0026gt;}} {{\u0026lt; li \u0026#34;fragment\u0026#34; \u0026gt;}}{{\u0026lt; span \u0026#34;text-highlight-black\u0026#34; \u0026gt;}}**xyz**{{\u0026lt; /span \u0026gt;}}{{\u0026lt; /li \u0026gt;}} {{\u0026lt; /ul \u0026gt;}} In fact, element replaces the class attribute from the last inner child object from the previous line.\n"},{"id":17,"href":"/documentation/categories/","title":"Categories","parent":"Code your Presentation Slides","content":""},{"id":18,"href":"/documentation/","title":"Code your Presentation Slides","parent":"","content":"Slides as Code is a Hugo theme integrating an opinionated distribution of Reveal.js.\n\nHugo is one of the most popular open-source static site generators.\n\nReveal.js is a framework for easily creating presentations using HTML.\n This theme comes with sac command-line tool to ease its use.\nYou can find a demo at https://sacproj.github.io/demo/.\nFeatures     Command-line on Linux, macOS and WSL Content from Markdown, Shortcode Layout with Columns, Boxes Components  Code Presentation Typed.js Integration Asciinema Player Integration Draw.io (renamed to diagrams.net) Integration Charts.js Integration Reveal.js Menu Interactive iframes with external tools such as  ttyd code-server     VS Code Snippets Composable Template, Configuration, VS Code Snippets and Contents.  Inspirations    This distribution is inspired by following Hugo themes and projects using Reveal.js:\n Hugo Theme Reveal.js Reveal Hugo GitPitch  GitHub repositories     CLI: sacproj/sac-cli Base Theme: sacproj/sac-theme Documentation: sacproj/documentation Demo: sacproj/demo Homebrew Tap: sacproj/homebrew-sac ACME as Theme example: sacproj/sac-theme-acme  Acknowledgments    \nData Essential to give time and means to develop and maintain this project.\n "},{"id":19,"href":"/documentation/misc/","title":"Misc","parent":"Code your Presentation Slides","content":"    Asciinema     Draw.io     FontAwesome     Interactive iframes     Youtube Downloader     "},{"id":20,"href":"/documentation/tags/","title":"Tags","parent":"Code your Presentation Slides","content":""}]